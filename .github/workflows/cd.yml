name: CD - Simple Deployment

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Render
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Deploy Backend
        run: |
          echo "üöÄ Deploying backend to Render..."
          
          if [ -z "${{ secrets.RENDER_TOKEN }}" ]; then
            echo "‚ùå RENDER_TOKEN not found"
            exit 1
          fi
          
          if [ -z "${{ secrets.RENDER_SERVICE_ID_BACKEND }}" ]; then
            echo "‚ùå RENDER_SERVICE_ID_BACKEND not found"
            exit 1
          fi
          
          echo "‚úÖ Triggering backend deployment..."
          
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_BACKEND }}/deploys" \
            -d '{"clearCache": "do_not_clear"}' \
            -w "\nHTTP Status: %{http_code}\n" \
            -s
          
          echo "‚úÖ Backend deployment triggered"

      - name: Deploy Frontend
        run: |
          echo "üöÄ Deploying frontend to Render..."
          
          if [ -z "${{ secrets.RENDER_TOKEN }}" ]; then
            echo "‚ùå RENDER_TOKEN not found"
            exit 1
          fi
          
          if [ -z "${{ secrets.RENDER_SERVICE_ID_FRONTEND }}" ]; then
            echo "‚ùå RENDER_SERVICE_ID_FRONTEND not found"
            exit 1
          fi
          
          echo "‚úÖ Triggering frontend deployment..."
          
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
            -H "Content-Type: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID_FRONTEND }}/deploys" \
            -d '{"clearCache": "do_not_clear"}' \
            -w "\nHTTP Status: %{http_code}\n" \
            -s
          
          echo "‚úÖ Frontend deployment triggered"

      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting 60 seconds for deployment to start..."
          sleep 60
          echo "‚úÖ Deployment wait completed"

      - name: Simple health check
        run: |
          echo "üè• Quick health check..."
          
          if [ -n "${{ secrets.BACKEND_URL }}" ]; then
            echo "üîç Checking backend..."
            curl -f "${{ secrets.BACKEND_URL }}/api/public/companies" && echo "‚úÖ Backend OK" || echo "‚ö†Ô∏è Backend check failed"
          fi
          
          if [ -n "${{ secrets.FRONTEND_URL }}" ]; then
            echo "üîç Checking frontend..."
            curl -f "${{ secrets.FRONTEND_URL }}" && echo "‚úÖ Frontend OK" || echo "‚ö†Ô∏è Frontend check failed"
          fi

      - name: Success notification
        run: |
          echo "üéâ Deployment completed!"
          echo "üîó Backend: ${{ secrets.BACKEND_URL }}"
          echo "üîó Frontend: ${{ secrets.FRONTEND_URL }}" 