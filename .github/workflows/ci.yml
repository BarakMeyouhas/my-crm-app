name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    runs-on: ubuntu-latest
    name: Backend Tests

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache backend dependencies
      uses: actions/cache@v4
      with:
        path: backend/node_modules
        key: ${{ runner.os }}-backend-node-${{ hashFiles('backend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-node-
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Setup Prisma
      run: |
        cd backend
        npx prisma generate
    
    - name: Test database migrations
      run: |
        cd backend
        npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5433/servix_db
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5433/servix_db
    
    - name: Run backend security audit
      run: |
        cd backend
        npm audit --audit-level=moderate

  frontend:
    runs-on: ubuntu-latest
    name: Frontend Tests

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Cache frontend dependencies
      uses: actions/cache@v4
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-frontend-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-frontend-node-
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint
    
    - name: Run frontend tests with coverage
      run: |
        cd frontend
        npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
    
    - name: Run frontend security audit
      run: |
        cd frontend
        npm audit --audit-level=moderate
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build --prod

  e2e:
    runs-on: ubuntu-latest
    name: E2E Tests
    needs: [frontend]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Run E2E tests
      run: |
        cd frontend
        npm run e2e

  build:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    name: Build Project
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Build backend
      run: |
        cd backend
        npx prisma generate
        npm run build || echo "No build script found, skipping"
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build --prod
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          backend/dist/
          frontend/dist/
        retention-days: 7 